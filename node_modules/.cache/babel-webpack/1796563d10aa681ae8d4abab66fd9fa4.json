{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/vanbr/Documents/angular-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/register.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/material/card\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/material/button\";\nexport class SignOnComponent {\n  constructor(formBuilder, registerService, router) {\n    this.formBuilder = formBuilder;\n    this.registerService = registerService;\n    this.router = router;\n    this.registerForm = this.formBuilder.group({\n      firstname: '',\n      lastname: '',\n      email: '',\n      password: ''\n    });\n  }\n\n  ngOnInit() {}\n\n  onSubmit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      let user = _this.registerForm.value;\n\n      _this.registerService.createUser(user).subscribe();\n\n      _this.router.navigate(['/sign-in']);\n    })();\n  }\n\n}\n\nSignOnComponent.ɵfac = function SignOnComponent_Factory(t) {\n  return new (t || SignOnComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.RegisterService), i0.ɵɵdirectiveInject(i3.Router));\n};\n\nSignOnComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SignOnComponent,\n  selectors: [[\"app-sign-on\"]],\n  decls: 21,\n  vars: 1,\n  consts: [[1, \"card\"], [\"id\", \"sign-on\"], [3, \"formGroup\", \"ngSubmit\"], [\"appearance\", \"fill\"], [\"matInput\", \"\", \"id\", \"firstName\", \"type\", \"text\", \"required\", \"\", \"formControlName\", \"firstname\"], [\"matInput\", \"\", \"id\", \"lastName\", \"type\", \"text\", \"required\", \"\", \"formControlName\", \"lastname\"], [\"matInput\", \"\", \"id\", \"email\", \"type\", \"email\", \"required\", \"\", \"formControlName\", \"email\"], [\"matInput\", \"\", \"id\", \"password\", \"type\", \"password\", \"required\", \"\", \"formControlName\", \"password\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\"]],\n  template: function SignOnComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"mat-card\", 1);\n      i0.ɵɵelementStart(2, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function SignOnComponent_Template_form_ngSubmit_2_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(3, \"mat-form-field\", 3);\n      i0.ɵɵelementStart(4, \"mat-label\");\n      i0.ɵɵtext(5, \"First Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"mat-form-field\", 3);\n      i0.ɵɵelementStart(8, \"mat-label\");\n      i0.ɵɵtext(9, \"Last Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"input\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"mat-form-field\", 3);\n      i0.ɵɵelementStart(12, \"mat-label\");\n      i0.ɵɵtext(13, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"mat-form-field\", 3);\n      i0.ɵɵelementStart(16, \"mat-label\");\n      i0.ɵɵtext(17, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(18, \"input\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"button\", 8);\n      i0.ɵɵtext(20, \"Register\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.registerForm);\n    }\n  },\n  directives: [i4.MatCard, i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i5.MatFormField, i5.MatLabel, i6.MatInput, i1.DefaultValueAccessor, i1.RequiredValidator, i1.NgControlStatus, i1.FormControlName, i7.MatButton],\n  styles: [\"#sign-on[_ngcontent-%COMP%] {\\n  margin: 20vh auto;\\n  width: 85%;\\n  max-width: 500px;\\n}\\n#sign-on[_ngcontent-%COMP%]   mat-form-field[_ngcontent-%COMP%] {\\n  width: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNpZ24tb24uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxpQkFBQTtFQUNBLFVBQUE7RUFDQSxnQkFBQTtBQUNGO0FBQUU7RUFDRSxXQUFBO0FBRUoiLCJmaWxlIjoic2lnbi1vbi5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIiNzaWduLW9uIHtcclxuICBtYXJnaW46IDIwdmggYXV0bztcclxuICB3aWR0aDogODUlO1xyXG4gIG1heC13aWR0aDo1MDBweDtcclxuICBtYXQtZm9ybS1maWVsZCB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICB9XHJcbn1cclxuIl19 */\"]\n});","map":{"version":3,"sources":["C:\\Users\\vanbr\\Documents\\angular-frontend\\src\\app\\sign-in\\sign-on\\sign-on.component.ts","C:\\Users\\vanbr\\Documents\\angular-frontend\\src\\app\\sign-in\\sign-on\\sign-on.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { RegisterService } from 'src/app/services/register.service';\r\n\r\n@Component({\r\n  selector: 'app-sign-on',\r\n  templateUrl: './sign-on.component.html',\r\n  styleUrls: ['./sign-on.component.scss']\r\n})\r\nexport class SignOnComponent implements OnInit {\r\n  registerForm = this.formBuilder.group({\r\n    firstname: '',\r\n    lastname: '',\r\n    email: '',\r\n    password: '',\r\n  });\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private registerService: RegisterService, private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  async onSubmit() {\r\n    let user = this.registerForm.value;\r\n    this.registerService.createUser(user).subscribe();\r\n    this.router.navigate(['/sign-in']);\r\n  }\r\n\r\n}\r\n","<div class=\"card\">\r\n  <mat-card id=\"sign-on\">\r\n    <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\r\n      <mat-form-field appearance=\"fill\">\r\n        <mat-label>First Name</mat-label>\r\n        <input matInput id=\"firstName\" type=\"text\" required formControlName=\"firstname\">\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"fill\">\r\n        <mat-label>Last Name</mat-label>\r\n        <input matInput id=\"lastName\" type=\"text\" required formControlName=\"lastname\">\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"fill\">\r\n        <mat-label>Email</mat-label>\r\n        <input matInput id=\"email\" type=\"email\" required formControlName=\"email\">\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"fill\">\r\n        <mat-label>Password</mat-label>\r\n        <input matInput id=\"password\" type=\"password\" required formControlName=\"password\">\r\n      </mat-form-field>\r\n      <button mat-raised-button color=\"primary\" type=\"submit\">Register</button>\r\n    </form>\r\n\r\n  </mat-card>\r\n</div>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}